[
  {
    "op": "core/column-move",
    "description": "Move column country to position 2",
    "columnName": "country",
    "index": 2
  },
  {
    "op": "core/column-rename",
    "description": "Rename column country to #country",
    "oldColumnName": "country",
    "newColumnName": "#country"
  },
  {
    "op": "core/column-reorder",
    "description": "Reorder columns",
    "columnNames": [
      "position",
      "rec_id",
      "#country",
      "fac_name",
      "fac_type",
      "latitude",
      "longitude",
      "year",
      "commodity",
      "location",
      "dmslat",
      "dmslong",
      "precision",
      "mm",
      "op_comp",
      "maininvest",
      "othinvest",
      "status",
      "capacity",
      "units",
      "notes",
      "cite"
    ]
  },
  {
    "op": "core/column-removal",
    "description": "Remove column dmslat",
    "columnName": "dmslat"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column dmslong",
    "columnName": "dmslong"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column fac_name using expression grel:if(length(value) > 1,value,cells['location'].value)",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "fac_name",
    "expression": "grel:if(length(value) > 1,value,cells['location'].value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column fac_name using expression grel:cells['location'].value",
    "engineConfig": {
      "facets": [
        {
          "invert": false,
          "expression": "value",
          "selectError": false,
          "omitError": false,
          "selectBlank": true,
          "name": "fac_name",
          "omitBlank": false,
          "columnName": "fac_name",
          "type": "list",
          "selection": []
        }
      ],
      "mode": "row-based"
    },
    "columnName": "fac_name",
    "expression": "grel:cells['location'].value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-rename",
    "description": "Rename column fac_name to #site",
    "oldColumnName": "fac_name",
    "newColumnName": "#site"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column fac_type to #site+siteType",
    "oldColumnName": "fac_type",
    "newColumnName": "#site+siteType"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column latitude to #lat",
    "oldColumnName": "latitude",
    "newColumnName": "#lat"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column longitude to #lng",
    "oldColumnName": "longitude",
    "newColumnName": "#lng"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column year to #trueAt",
    "oldColumnName": "year",
    "newColumnName": "#trueAt"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column commodity to #commodity",
    "oldColumnName": "commodity",
    "newColumnName": "#commodity"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column #lat to #site+lat",
    "oldColumnName": "#lat",
    "newColumnName": "#site+lat"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column #lng to #site+lng",
    "oldColumnName": "#lng",
    "newColumnName": "#site+lng"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column #trueAt to #site+trueAt",
    "oldColumnName": "#trueAt",
    "newColumnName": "#site+trueAt"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column #commodity to #site+commodity",
    "oldColumnName": "#commodity",
    "newColumnName": "#site+commodity"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column location to #site+address",
    "oldColumnName": "location",
    "newColumnName": "#site+address"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column precision to #site+locationPrecision",
    "oldColumnName": "precision",
    "newColumnName": "#site+locationPrecision"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column mm to #site+miningMethod",
    "oldColumnName": "mm",
    "newColumnName": "#site+miningMethod"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column op_comp using expression grel:replace(replace(value,\", operator\",\"\"),\", manager\",\"\")",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "op_comp",
    "expression": "grel:replace(replace(value,\", operator\",\"\"),\", manager\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column #site+company+1+isOperator at index 13 based on column op_comp using expression grel:\"True\"",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "#site+company+1+isOperator",
    "columnInsertIndex": 13,
    "baseColumnName": "op_comp",
    "expression": "grel:\"True\"",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column op_comp to #site+company+1",
    "oldColumnName": "op_comp",
    "newColumnName": "#site+company+1"
  },
  {
    "op": "core/column-addition",
    "description": "Create column #site+company+1+trueAt at index 14 based on column #site+company+1+isOperator using expression grel:cells['#site+trueAt'].value",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "#site+company+1+trueAt",
    "columnInsertIndex": 14,
    "baseColumnName": "#site+company+1+isOperator",
    "expression": "grel:cells['#site+trueAt'].value",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-addition",
    "description": "Create column #site+company+2+share at index 16 based on column maininvest using expression grel:replace(replace(split(value,\",\")[-1],\";\",\"\"),\"%\",\"\")",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "#site+company+2+share",
    "columnInsertIndex": 16,
    "baseColumnName": "maininvest",
    "expression": "grel:replace(replace(split(value,\",\")[-1],\";\",\"\"),\"%\",\"\")",
    "onError": "set-to-blank"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column #site+company+2+share",
    "engineConfig": {
      "facets": [
        {
          "invert": false,
          "expression": "value",
          "selectError": false,
          "omitError": false,
          "selectBlank": false,
          "name": "#site+company+2+share",
          "omitBlank": false,
          "columnName": "#site+company+2+share",
          "type": "list",
          "selection": [
            {
              "v": {
                "v": " 100 state-owned",
                "l": " 100 state-owned"
              }
            }
          ]
        }
      ],
      "mode": "row-based"
    },
    "columnName": "#site+company+2+share",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " 100 state-owned"
        ],
        "to": "100"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column #site+company+2+share",
    "engineConfig": {
      "facets": [
        {
          "invert": false,
          "expression": "value",
          "selectError": false,
          "omitError": false,
          "selectBlank": false,
          "name": "#site+company+2+share",
          "omitBlank": false,
          "columnName": "#site+company+2+share",
          "type": "list",
          "selection": [
            {
              "v": {
                "v": " 100)",
                "l": " 100)"
              }
            }
          ]
        }
      ],
      "mode": "row-based"
    },
    "columnName": "#site+company+2+share",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " 100)"
        ],
        "to": "100"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column #site+company+2+share",
    "engineConfig": {
      "facets": [
        {
          "invert": false,
          "expression": "value",
          "selectError": false,
          "omitError": false,
          "selectBlank": false,
          "name": "#site+company+2+share",
          "omitBlank": false,
          "columnName": "#site+company+2+share",
          "type": "list",
          "selection": [
            {
              "v": {
                "v": " 16.67 each)",
                "l": " 16.67 each)"
              }
            }
          ]
        }
      ],
      "mode": "row-based"
    },
    "columnName": "#site+company+2+share",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          " 16.67 each)"
        ],
        "to": ""
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column #site+company+2+share using expression value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "#site+company+2+share",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column #site+company+2+share using expression grel:toNumber(value)",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "#site+company+2+share",
    "expression": "grel:toNumber(value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column #site+company+2 at index 16 based on column maininvest using expression grel:split(value,\",\")[0]",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "#site+company+2",
    "columnInsertIndex": 16,
    "baseColumnName": "maininvest",
    "expression": "grel:split(value,\",\")[0]",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column maininvest to #site+company+2+mainInvestorTextFromMinFacDB",
    "oldColumnName": "maininvest",
    "newColumnName": "#site+company+2+mainInvestorTextFromMinFacDB"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column status to #site+status",
    "oldColumnName": "status",
    "newColumnName": "#site+status"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column capacity to #site+capacity",
    "oldColumnName": "capacity",
    "newColumnName": "#site+capacity"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column notes to #site+notes",
    "oldColumnName": "notes",
    "newColumnName": "#site+notes"
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column othinvest",
    "columnName": "othinvest",
    "keyColumnName": "position",
    "separator": ";",
    "mode": "plain"
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column othinvest",
    "columnName": "othinvest",
    "keyColumnName": "position",
    "separator": " and ",
    "mode": "plain"
  },
  {
    "op": "core/multivalued-cell-split",
    "description": "Split multi-valued cells in column othinvest",
    "columnName": "othinvest",
    "keyColumnName": "position",
    "separator": "and ",
    "mode": "plain"
  },
  {
    "op": "core/column-addition",
    "description": "Create column #company+3+share at index 19 based on column othinvest using expression grel:toNumber(replace(replace(replace(split(value,\",\")[-1],\"%\",\"\"),\")\",\"\"),\"(\",\"\")))",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "newColumnName": "#company+3+share",
    "columnInsertIndex": 19,
    "baseColumnName": "othinvest",
    "expression": "grel:toNumber(replace(replace(replace(split(value,\",\")[-1],\"%\",\"\"),\")\",\"\"),\"(\",\"\")))",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column othinvest using expression grel:split(value,\",\")[0]",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "othinvest",
    "expression": "grel:split(value,\",\")[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/fill-down",
    "description": "Fill down cells in column #country",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "#country"
  },
  {
    "op": "core/fill-down",
    "description": "Fill down cells in column #site",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "#site"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column othinvest to #site+company+3",
    "oldColumnName": "othinvest",
    "newColumnName": "#site+company+3"
  }
]